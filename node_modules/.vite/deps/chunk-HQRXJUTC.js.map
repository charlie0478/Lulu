{
  "version": 3,
  "sources": ["../../@cloudinary-util/util/dist/index.mjs"],
  "sourcesContent": ["// src/lib/cloudinary.ts\nvar REGEX_VERSION = /\\/v\\d+\\//;\nvar REGEX_FORMAT = /\\.(ai|avif|gif|png|webp|bmp|bw|djvu|dng|ps|ept|eps|eps3|fbx|flif|gif|glb|gltf|heif|heic|ico|indd|jpg|jpe|jpeg|jp2|wdp|jxr|hdp|obj|pdf|ply|png|psd|arw|cr2|svg|tga|tif|tiff|u3ma|usdz|webp|3g2|3gp|avi|flv|m3u8|ts|m2ts|mts|mov|mkv|mp4|mpeg|mpd|mxf|ogv|webm|wmv)$/i;\nvar REGEX_URL = /https?:\\/\\/(?<host>[^\\/]+)\\/(?<cloudName>[^\\/]+)\\/(?<assetType>image|images|video|videos|raw|files)\\/(?<deliveryType>upload|fetch|private|authenticated|sprite|facebook|twitter|youtube|vimeo)?\\/?(?<signature>s\\-\\-[a-zA-Z0-9]+\\-\\-)?\\/?(?<transformations>(?:[^_\\/]+_[^,\\/]+,?\\/?)*\\/)*(?<version>v\\d+|\\w{1,2})\\/(?<publicId>[^\\s]+)$/;\nvar ASSET_TYPES_SEO = [\"images\", \"videos\", \"files\"];\nfunction parseUrl(src) {\n  var _a, _b, _c, _d;\n  if (typeof src !== \"string\") {\n    throw new Error(`Failed to parse URL: Invalid src of type ${typeof src}`);\n  }\n  const hasVersion = REGEX_VERSION.test(src);\n  if (!hasVersion) {\n    throw new Error(`Invalid src: Does not include version (Ex: /v1234/)`);\n  }\n  const [baseUrlWithExtension, queryString] = src.split(\"?\");\n  const formatMatches = baseUrlWithExtension.match(REGEX_FORMAT);\n  let baseUrl = baseUrlWithExtension;\n  let format;\n  if (formatMatches !== null) {\n    format = `${formatMatches[0]}`;\n    baseUrl = baseUrlWithExtension.replace(new RegExp(`${format}$`), \"\");\n  }\n  const results = baseUrl.match(REGEX_URL);\n  const transformations = (_b = (_a = results == null ? void 0 : results.groups) == null ? void 0 : _a.transformations) == null ? void 0 : _b.split(\"/\").filter((t) => !!t);\n  const parts = {\n    ...results == null ? void 0 : results.groups,\n    format,\n    seoSuffix: void 0,\n    transformations: transformations || [],\n    queryParams: {},\n    version: ((_c = results == null ? void 0 : results.groups) == null ? void 0 : _c.version) ? parseInt(results.groups.version.replace(\"v\", \"\")) : void 0\n  };\n  if (queryString) {\n    parts.queryParams = queryString.split(\"&\").reduce((prev, curr) => {\n      const [key, value] = curr.split(\"=\");\n      prev[key] = value;\n      return prev;\n    }, {});\n  }\n  if (parts.assetType && ASSET_TYPES_SEO.includes(parts.assetType)) {\n    const publicIdParts = ((_d = parts.publicId) == null ? void 0 : _d.split(\"/\")) || [];\n    parts.seoSuffix = publicIdParts.pop();\n    parts.publicId = publicIdParts.join(\"/\");\n  }\n  return parts;\n}\nfunction getPublicId(src) {\n  const { publicId } = parseUrl(src) || {};\n  return publicId;\n}\nfunction getTransformations(src) {\n  const { transformations = [] } = parseUrl(src) || {};\n  return transformations.map((t) => t.split(\",\"));\n}\n\n// src/lib/colors.ts\nfunction testColorIsHex(value) {\n  if (typeof value !== \"string\")\n    return false;\n  return !!value.startsWith(\"#\");\n}\nfunction convertColorHexToRgb(value) {\n  return `rgb:${value.replace(\"#\", \"\")}`;\n}\n\n// src/lib/util.ts\nfunction encodeBase64(value) {\n  if (typeof btoa === \"function\") {\n    return btoa(value);\n  }\n  if (typeof Buffer !== \"undefined\") {\n    return Buffer.from(value).toString(\"base64\");\n  }\n}\nfunction objectHasKey(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction sortByKey(array = [], key, type = \"asc\") {\n  function compare(a, b) {\n    let keyA = a[key];\n    let keyB = b[key];\n    if (typeof keyA === \"string\") {\n      keyA = keyA.toLowerCase();\n    }\n    if (typeof keyB === \"string\") {\n      keyB = keyB.toLowerCase();\n    }\n    if (keyA < keyB) {\n      return -1;\n    }\n    if (keyA > keyB) {\n      return 1;\n    }\n    return 0;\n  }\n  let newArray = [...array];\n  if (typeof key !== \"string\")\n    return newArray;\n  newArray = newArray.sort(compare);\n  if (type === \"desc\") {\n    return newArray.reverse();\n  }\n  return newArray;\n}\nexport {\n  convertColorHexToRgb,\n  encodeBase64,\n  getPublicId,\n  getTransformations,\n  objectHasKey,\n  parseUrl,\n  sortByKey,\n  testColorIsHex\n};\n"],
  "mappings": "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",
  "names": []
}
