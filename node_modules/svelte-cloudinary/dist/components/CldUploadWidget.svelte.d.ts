import { SvelteComponentTyped } from "svelte";
import type { ResultsEvents, UploadWidget, CldUploadWidgetProps } from './CldUploadWidgetTypes.ts';
declare const __propDef: {
    props: {
        onError?: ((error: any, widget?: UploadWidget | undefined) => void) | undefined;
        onUpload?: ((result: ResultsEvents, widget?: UploadWidget | undefined) => void) | undefined;
        options?: import("./CldUploadWidgetTypes.ts").CldUploadWidgetPropsOptions | undefined;
        onOpen?: ((widget?: UploadWidget | undefined) => void) | undefined;
        onClose?: ((widget?: UploadWidget | undefined) => void) | undefined;
        uploadPreset: string;
        signatureEndpoint?: undefined;
    } | {
        onError?: ((error: any, widget?: UploadWidget | undefined) => void) | undefined;
        onUpload?: ((result: ResultsEvents, widget?: UploadWidget | undefined) => void) | undefined;
        options?: import("./CldUploadWidgetTypes.ts").CldUploadWidgetPropsOptions | undefined;
        onOpen?: ((widget?: UploadWidget | undefined) => void) | undefined;
        onClose?: ((widget?: UploadWidget | undefined) => void) | undefined;
        uploadPreset?: undefined;
        signatureEndpoint: string;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {
            open: () => void;
            widget: UploadWidget;
            cloudinary: any;
            isLoading: boolean;
        };
    };
};
export type CldUploadWidgetProps = typeof __propDef.props;
export type CldUploadWidgetEvents = typeof __propDef.events;
export type CldUploadWidgetSlots = typeof __propDef.slots;
export default class CldUploadWidget extends SvelteComponentTyped<CldUploadWidgetProps, CldUploadWidgetEvents, CldUploadWidgetSlots> {
}
export {};
